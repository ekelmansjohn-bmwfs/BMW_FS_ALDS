import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { ADSConfirmationBoxComponent } from '../confirmation-box/confirmation-box.component';
import * as i0 from "@angular/core";
export declare class ADSFormInputFilesComponent implements AfterViewInit {
    private readonly cdr;
    fileInput: ElementRef;
    dropzone: ElementRef;
    alertModal: ADSConfirmationBoxComponent;
    readonly filesEmitter: EventEmitter<Array<File>>;
    acceptedFileTypes: string;
    css: string;
    fileLimit: number;
    sizeLimit: number;
    disabled: boolean;
    id: string;
    label: string;
    description: string;
    removeAllFilesEmitter?: EventEmitter<void>;
    files: Array<File>;
    private dropzoneElement;
    private inputElement;
    private readonly fileIcons;
    private readonly mimeTypes;
    dragover: boolean;
    focus: boolean;
    acceptedMimeTypes: Array<string>;
    fileLimitReached: boolean;
    sizeLimitReached: boolean;
    constructor(cdr: ChangeDetectorRef);
    getFileType(type: string): string;
    getFileIcon(type: string): string;
    getFormattedFileSize(size: number): string;
    getFormattedTotalFilesSize(): string;
    getFormattedSizeLimit(): string;
    setAcceptedMimeTypes(): void;
    checkFileType(type: string): boolean;
    checkFileLimit(length: number): boolean;
    checkFileLimitReached(): void;
    checkSizeLimit(list: Array<File>, size: number): boolean;
    checkSizeLimitReached(): void;
    checkDuplicates(list: Array<File>, name: string): boolean;
    removeFile(filename: string): void;
    getFileTypeFromName(filename: string): string;
    addFiles(files: FileList): void;
    ngAfterViewInit(): void;
    trackByIndex(index: number): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<ADSFormInputFilesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ADSFormInputFilesComponent, "ads-form-input-files", never, { "acceptedFileTypes": "acceptedFileTypes"; "css": "css"; "fileLimit": "fileLimit"; "sizeLimit": "sizeLimit"; "disabled": "disabled"; "id": "id"; "label": "label"; "description": "description"; "removeAllFilesEmitter": "removeAllFilesEmitter"; "files": "files"; }, { "filesEmitter": "filesEmitter"; }, never, never, false, never>;
}
