import { CollisionDetectionService } from '../../utils';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class ADSFormTypeaheadComponent implements AfterViewInit, ControlValueAccessor, OnChanges {
    private readonly windowRef;
    private readonly document;
    private readonly cdr;
    private readonly collisionDetection;
    typeahead: ElementRef;
    async: string;
    css: string;
    hint: string;
    label: string;
    type: string;
    placeholder: string;
    displayNoResults: boolean;
    displaySearchIcon: boolean;
    private readonly selectedValue;
    readonly focusEmitter: EventEmitter<any>;
    readonly blurEmitter: EventEmitter<any>;
    readonly id: string;
    inputElement: HTMLInputElement;
    private optionsElement;
    private optionsElementItems;
    private selectedOption;
    private expanded;
    private value;
    displayNoResultsElement: boolean;
    constructor(windowRef: Window, document: Document, cdr: ChangeDetectorRef, collisionDetection: CollisionDetectionService);
    onFocus(): void;
    onBlur(): void;
    private show;
    private hide;
    private first;
    private last;
    private next;
    private previous;
    private selectOption;
    private deselectOption;
    private emitOption;
    private scrollIntoView;
    private renderOptions;
    clearInput(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onChange(value: any): void;
    onTouched(): void;
    writeValue(value: string | null): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ADSFormTypeaheadComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ADSFormTypeaheadComponent, "ads-form-typeahead", never, { "async": "async"; "css": "css"; "hint": "hint"; "label": "label"; "type": "type"; "placeholder": "placeholder"; "displayNoResults": "displayNoResults"; "displaySearchIcon": "displaySearchIcon"; }, { "selectedValue": "selectedValue"; "focusEmitter": "focusEmitter"; "blurEmitter": "blurEmitter"; }, never, ["*"], false, never>;
}
