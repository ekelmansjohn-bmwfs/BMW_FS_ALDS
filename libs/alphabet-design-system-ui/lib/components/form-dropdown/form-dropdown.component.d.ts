import { AfterContentChecked, AfterViewInit, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { CollisionDetectionService } from '../../utils';
import * as i0 from "@angular/core";
export declare class ADSFormDropdownComponent implements AfterViewInit, ControlValueAccessor, AfterContentChecked {
    private readonly windowRef;
    private readonly document;
    private readonly collisionDetection;
    dropdown: ElementRef;
    css: string;
    disabled: boolean;
    hideLabel: boolean;
    label: string;
    ariaLabelledBy: string;
    readonly id: string;
    private buttonElement;
    private inputElement;
    private optionsElement;
    private optionsElementItems;
    private newValue;
    private selectedOption;
    private expanded;
    value: string | null;
    inputValue: string;
    constructor(windowRef: Window, document: Document, collisionDetection: CollisionDetectionService);
    buttonClick(): void;
    show(): void;
    private hide;
    private first;
    private last;
    private next;
    private previous;
    private current;
    private initialOption;
    private deselectOption;
    private selectOption;
    ngAfterContentChecked(): void;
    ngAfterViewInit(): void;
    onChange(value: any): void;
    onTouched(): void;
    writeValue(value: string | null | undefined): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ADSFormDropdownComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ADSFormDropdownComponent, "ads-form-dropdown", never, { "css": "css"; "disabled": "disabled"; "hideLabel": "hideLabel"; "label": "label"; "ariaLabelledBy": "ariaLabelledBy"; }, {}, never, ["*"], false, never>;
}
